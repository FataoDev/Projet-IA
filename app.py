import streamlit as st
import numpy as np
import joblib  # Charger le mod√®le
from sklearn.preprocessing import StandardScaler

# Charger le mod√®le KNN et le scaler
model = joblib.load("knn_model.pkl")
scaler = joblib.load("scaler.pkl")

# ---- üé® Style de la page ----
st.set_page_config(
    page_title="Pr√©diction des Maladies Cardiaques ‚ù§Ô∏è",
    page_icon="üíñ",
    layout="centered"
)

# Ajout d'un fond color√©
st.markdown(
    """
    <style>
        body {
            background-color: #F8F9FA;
        }
        .stApp {
            background: #f0f2f6;
            border-radius: 15px;
            padding: 20px;
            box-shadow: 2px 2px 10px rgba(0,0,0,0.2);
        }
        .title {
            text-align: center;
            color: #ff4b4b;
            font-size: 32px;
            font-weight: bold;
        }
        .result {
            text-align: center;
            font-size: 22px;
            font-weight: bold;
            padding: 15px;
            border-radius: 10px;
        }
        .positive {
            background-color: #ffcccc;
            color: #ff0000;
        }
        .negative {
            background-color: #ccffcc;
            color: #008000;
        }
    </style>
    """,
    unsafe_allow_html=True
)

# ---- üè• Titre et Description ----
st.markdown("<h1 class='title'>üîç Pr√©diction des Maladies Cardiaques</h1>", unsafe_allow_html=True)
st.write("üë®‚Äç‚öïÔ∏è **Entrez vos informations m√©dicales et obtenez une pr√©diction imm√©diate.**")

# ---- üìå Inputs de l'utilisateur ----
col1, col2 = st.columns(2)

with col1:
    age = st.slider("√Çge", 20, 100, 50)
    sex = st.selectbox("Sexe", [("Homme üöπ", 1), ("Femme üö∫", 0)])[1]
    cp = st.selectbox("Type de douleur thoracique", [("Type 0", 0), ("Type 1", 1), ("Type 2", 2), ("Type 3", 3)])[1]
    trestbps = st.slider("Pression art√©rielle (mm Hg)", 80, 200, 120)
    chol = st.slider("Cholest√©rol (mg/dl)", 100, 400, 200)
    fbs = st.selectbox("Glyc√©mie √† jeun > 120 mg/dl ?", [("Non", 0), ("Oui", 1)])[1]

with col2:
    restecg = st.selectbox("R√©sultats √©lectrocardiographiques", [("Normal", 0), ("Anormal", 1), ("Hypertrophie", 2)])[1]
    thalach = st.slider("Fr√©quence cardiaque max", 60, 220, 150)
    exang = st.selectbox("Angine induite par l'exercice ?", [("Non", 0), ("Oui", 1)])[1]
    oldpeak = st.slider("ST Depression", 0.0, 6.0, 1.0)
    slope = st.selectbox("Pente du segment ST", [("Bas", 0), ("Moyen", 1), ("Haut", 2)])[1]
    ca = st.slider("Nombre de vaisseaux color√©s (0-3)", 0, 3, 1)
    thal = st.selectbox("Thalass√©mie", [("Normal", 3), ("D√©faut fix√©", 6), ("D√©faut r√©versible", 7)])[1]

# ---- üìä Pr√©paration des donn√©es ----
user_input = np.array([[age, sex, cp, trestbps, chol, fbs, restecg, thalach, exang, oldpeak, slope, ca, thal]])
user_input = scaler.transform(user_input)  # Normaliser les donn√©es

# ---- üß™ Bouton de Pr√©diction ----
if st.button("üîç Pr√©dire"):
    prediction = model.predict(user_input)
    
    # ---- üéØ Affichage du r√©sultat ----
    if prediction[0] == 1:
        st.markdown("<div class='result positive'>üö® **Risque √©lev√© de maladie cardiaque ! Consultez un m√©decin.**</div>", unsafe_allow_html=True)
    else:
        st.markdown("<div class='result negative'>‚úÖ **Pas de signe de maladie cardiaque. Continuez √† surveiller votre sant√© !**</div>", unsafe_allow_html=True)

# ---- ü©∫ Footer ----
st.markdown("<hr>", unsafe_allow_html=True)
st.write("üî¨ **D√©velopp√© avec ‚ù§Ô∏è par un passionn√© de l'IA**")
